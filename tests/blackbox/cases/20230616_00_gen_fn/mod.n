fn sum<T>(T a, T b):T {
    return a + b
}

fn list_sum<T>([T] list):T {
    T sum = 0
   	for k,v in list {
   		sum += v
   	}
   	return sum
}

type box<T, U> = struct {
	T width
	U length
}

// 泛型函数
fn area<T, U>(box<T, U> b):T {
    return b.width * b.length as T
}

// 类型扩展
fn box<T, U>.perimeter() {
    return (self.width + self.length) * 2
}