import syscall
import libc

// 创建一个 socket
int sockfd = syscall.socket(syscall.AF_INET, syscall.SOCK_STREAM, 0)

println('create socket success, fd: ', sockfd)

var addr = syscall.sockaddr_in {
    sin_family = syscall.AF_INET as u16,
    sin_addr = 0x00000000,
    sin_port = libc.htons(8080),
    sin_zero = [] as [u8,8]
}

var err = try syscall.bind(sockfd, addr)
if err.has {
    return println('bind error: ', err.msg)
}
println('bind :8080 success')

// 监听链接
var err = try syscall.listen(sockfd, 10)
if err.has {
    return println('listen error: ', err.msg)
}
println('listen success')

// 接受链接
var client_addr = syscall.sockaddr_in{} // 初始化一个空的地址，等待 callee 赋值

var (client_fd,err) = try syscall.accept(sockfd, client_addr)
if err.has {
    return println('accept error: ', err.msg)
}

println('accept success, fd: ', client_fd)
// println('accept success', client_fd, client_addr.sin_addr, client_addr.sin_port)

