fn rem(int dividend, int divisor):int {
	if divisor == 0 {
		throw 'divisor cannot zero'
	}

	return dividend % divisor
}

int result = 0

// normal
result = rem(10, 3)
println(result)

// normal
result = rem(10, 4) catch err {
    // default continue
    println(err.msg)
}
println(result)

// error handle
result = rem(10, 0) catch err {
    println(err.msg)
    continue 1
}
println(result)


// error not handle
result = rem(10, 0)
println('hello world')