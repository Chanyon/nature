/home/vagrant/Code/nature-lang/nature/build/tests/blackbox/20221025_06_closure
[==========] Running 1 test(s).
NATURE_ROOT: /home/vagrant/Code/nature-lang/nature
BUILD_OS: linux
BUILD_ARCH: amd64
BUILD_OUTPUT_NAME: main
BUILD_OUTPUT_DIR: /home/vagrant/Code/nature-lang/nature/tests/blackbox/tmp
BUILD_OUTPUT: /home/vagrant/Code/nature-lang/nature/tests/blackbox/tmp/main
WORK_DIR: /home/vagrant/Code/nature-lang/nature/tests/blackbox/cases
BASE_NS: cases
TERM_DIR: /tmp/nature-build.ut41Vz
BUILD_ENTRY: 20221025_06_closure.n
SOURCE_PATH: /home/vagrant/Code/nature-lang/nature/tests/blackbox/cases/20221025_06_closure.n

1:fn print ( ... [ any ] args ) { }
2:;
3:fn println ( ... [ any ] args ) { }
5:;
6:fn set ( ... [ T ] keys ) : { T } { }
8:;
9:fn list_push ( [ T ] list , ptr < T > v ) { }
10:;
11:fn list_length ( [ T ] list ) : int { }
12:;
13:fn map_delete ( { T : T } map , ptr < T > key ) { }
14:;
15:fn map_length ( { T : T } map ) : int { }
16:;
17:fn set_contains ( { T } set , ptr < T > key ) : bool { }
18:;
19:fn set_add ( { T } set , ptr < T > key ) : bool { }
20:;
21:fn set_delete ( { T } set , ptr < T > key ) { }
23:;
24:fn sleep ( int second ) { }
25:;
26:type T = struct { }
28:;
29:type errort = struct {
30:string msg
31:}
1:int cash = 1000
2:;
3:fn save ( int number ) : int {
4:cash = cash + number ;
5:return cash
6:}
7:; compiler closure lir: main ---------------------------------------------------------------------
0		LABEL 	SYMBOL[main|G]
0		FN_BEGIN	FORMALS()
0		MOVE 	IMM[1000:INT] -> VAR[main.cash_0|int]
0		R_CALL	SYMBOL[env_new|G], PARAMS(IMM[1:INT]) -> VAR[main.t_5|i64]
0		LEA   	VAR[main.cash_0|int] -> VAR[main.t_6|pointer]
0		R_CALL	SYMBOL[env_assign|G], PARAMS(VAR[main.t_5|i64],IMM[9:INT],IMM[0:INT],VAR[main.t_6|pointer])
0		LEA   	SYMBOL[main.@lambda_3|L] -> VAR[main.t_4|fn]
0		R_CALL	SYMBOL[fn_new|G], PARAMS(VAR[main.t_4|fn],VAR[main.t_5|i64]) -> VAR[main.save_1|fn]
0		BAL 	SYMBOL[end_main|L]
0		LABEL 	SYMBOL[error_main|L]
0		RETURN
0		BAL 	SYMBOL[end_main|L]
0		LABEL 	SYMBOL[end_main|L]
0		LEA   	VAR[main.cash_0|int] -> VAR[main.t_7|pointer]
0		R_CALL	SYMBOL[env_closure|G], PARAMS(VAR[main.t_7|pointer])
0		FN_END


cfg after block_lir: main------------------------------------------------------------------------
block: main
0		LABEL 	SYMBOL[main|G]
0		FN_BEGIN	FORMALS()
0		MOVE 	IMM[1000:INT] -> VAR[main.cash_0|int]
0		R_CALL	SYMBOL[env_new|G], PARAMS(IMM[1:INT]) -> VAR[main.t_5|i64]
0		LEA   	VAR[main.cash_0|int] -> VAR[main.t_6|pointer]
0		R_CALL	SYMBOL[env_assign|G], PARAMS(VAR[main.t_5|i64],IMM[9:INT],IMM[0:INT],VAR[main.t_6|pointer])
0		LEA   	SYMBOL[main.@lambda_3|L] -> VAR[main.t_4|fn]
0		R_CALL	SYMBOL[fn_new|G], PARAMS(VAR[main.t_4|fn],VAR[main.t_5|i64]) -> VAR[main.save_1|fn]
0		BAL 	SYMBOL[end_main|L]

		pred:
		succ:end_main
		live_in:


block: error_main
0		LABEL 	SYMBOL[error_main|L]
0		RETURN
0		BAL 	SYMBOL[end_main|L]

		pred:
		succ:end_main
		live_in:


block: end_main
0		LABEL 	SYMBOL[end_main|L]
0		LEA   	VAR[main.cash_0|int] -> VAR[main.t_7|pointer]
0		R_CALL	SYMBOL[env_closure|G], PARAMS(VAR[main.t_7|pointer])
0		FN_END

		pred:main	error_main
		succ:
		live_in:




