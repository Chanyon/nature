// 正常函数声明
bool test(string a, int b) {

}

// 省略函数声明
fn bool(string a, int b) {

}

// 省略函数返回值(那就还需要判断这个是类型还是返回值!!!)
fn test(string a, int b) {

}

// 函数赋值给变量
fn bool(string, int) test = fn bool(string a, int b) {

}

// 省略返回值
fn(string, int) test = fn(string a, int b) {

}

// 函数参数
bool foo(fn bool(string, int) test, int count) {
	return test()
}

// 闭包传递
bool foo(fn(string, int): bool {
	return false
}, 1);


// 响应函数值
fn bool(string, int) foo() {
	return fn bool(string a, int b) {
		return false
	}
}

