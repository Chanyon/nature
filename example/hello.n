import "src/redis" as local_redis // redis.set
import "github.com/weiwenhao/redis" as remote_redis // redis.set

int foo
foo = 1 + bar
bar = 100
int foo = 12
bool foo = true
string foo = "为什么最常用的字符串要是双引号？，是有什么规定吗？"

var foo = 12 // 类型推导

foo.bar = 12
foo[bar] = 12
foo.bar()

// 特殊格式语法糖，兼容  list<int>
list[int] foo = [12, 14, 16]

// 特殊格式语法糖，兼容 map<string,int>
map{string:int} foo = {
  'a-a':1,
  'b-b':2,
  'c-c':3
}

// 自定义类型
type custom = int
type custom_struct = struct {
	int i,
	bool b,
	list[int] c
}

// <> 是类型声明中的万能符号
f<bool (int, int)> foo = bool (int a, int b) {}
list<int> bar = []
map<int,string> car = {}

int foo() {}

// 为了兼容闭包必须显示声明返回值,  null foo() {}
foo() {}

f<bool (int a, int b)> make() {
	return bool (int a, int b) {
		return a + b > 0
	}
}

f<bool (int a, int b)> make() {}

var foo = make()

// 没有返回类型，就当作 null 来处理
foo(bool (int a) {
	if (a > 1) {
		return true
	}
	return false
})


if (a > 1) {
	++a
}


for (var key,value in list) {

}

while (true) {

}


