//import "src/redis" as local_redis // redis.set
//import "github.com/weiwenhao/redis" as remote_redis // redis.set

var b11 = 3
var a12 = 12

while (true) {
	var b = 3
	var a = 12
}

string car = 1

var test2 = 12

var test = 12

int custom_call() {

}

var custom_type = 1
custom_call(
test,
test2,
custom_type () {
	return 1
})

var a = []
var iteration
for (var key,value in iteration) {

}

if (a > 1) {
	a = a + 1
}


var test3 = 1
var call

custom_call()
custom_call(test,call(),custom_type () {
return 1
})
custom_call(custom_type test4() {
	return 1
})
custom_call(custom_type () {
	return 1
})
custom_call(call())

type custom = int

var a1 = custom () {

}

var a2 = custom foo3() {

}

custom () {

}

custom test5() {

}

custom_type () {
	return 1
}


var foo1 = test5()

list[int] foo = [
			1,
			2
]

void test6() {
	test a = 24
	return 12
}

map{string:int} foo_4 = {
  'a-a':1,
  'b-b':2,
  'c-c':3
}

var bar = "test"
foo.bar()
foo[bar] = 12
int foo_5
var foo_6 = 12 // 类型推导
foo = 1 + bar
foo = 1 + 1 * 1
foo = 1 + 4 * (2 - 3 / 3)
bar = 100
int foo_7 = 12
bool foo_8 = true
string foo_9 = "为什么最常用的字符串要是双引号？，是有什么规定吗？"


foo.bar = 12
foo[bar] = 12
foo.bar()

// 特殊格式语法糖，兼容  list<int>
list[int] foo_10 = [
			1,
			2
]
//list[int] foo = list_gen(int, 100) // 待定
//list[int] foo = make(list[int], 100) // 待定
//list<int> bar = []
// list<int> bar = my_gen()
//list[int]

var a_3 = []


// 特殊格式语法糖，兼容 map<string,int>
map{string:int} foo_11 = {
  'a-a':1,
  'b-b':2,
  'c-c':3
}

void test9(int a) {
	test foo = 24
	return 12
}
//map<int,string> car = {}

// 自定义类型
//type custom = int
//type custom_struct = struct {
//	int i,
//	bool b,
//	list[int] c
//}


var apple = custom_call()


if (a > 1) {
	a = a + 1
}

var l = []

for (var key,value in l) {

}

while (true) {

}


