fn std_args():[string]

fn htons(u16 host):u16

/* ISO C `broken-down time' structure.  */
type libc_tm_t = struct {
    i32 tm_sec
    i32 tm_min
    i32 tm_hour
    i32 tm_mday
    i32 tm_mon
    i32 tm_year
    i32 tm_wday
    i32 tm_yday
    i32 tm_isdst
    i64 tm_gmtoff
    cptr tm_zone
}

// 标准库函数, 返回值是静态值，不用处理 gc 但是线程不安全
fn localtime(ptr<i64> timestamp):ptr<libc_tm_t>

// 将 time_info_t 转换为时间戳
fn mktime(ptr<libc_tm_t> time_info):i64

// strftime(buf.ref(), buf.len(), '%Y-%m-%d %H:%M:%S', &tp)
fn strftime(cptr s, i64 size, cptr format, ptr<libc_tm_t> time_info):i64


// --- 自定义在 runtime/libc 模块中的函数

// cptr = char*
fn libc_string_new(cptr s):string

fn libc_string_replace(string str, string old, string new_str):string

fn libc_string_fit(string str):string

// 读取 errno 中的错误信息
fn libc_strerror():string

