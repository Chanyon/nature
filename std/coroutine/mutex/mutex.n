type linkco_list_t = struct{
    void_ptr head
    void_ptr rear
    i64 count
    arr<u8, 40> locker // c: pthread_mutex_t
}

type mutex_t = struct {
    i64 state
    i64 sema
    i64 waiter_count
}

#linkid rt_mutex_lock
fn rt_mutex_lock(ptr<mutex_t> m)

#linkid rt_mutex_try_lock
fn rt_mutex_try_lock(ptr<mutex_t> m):bool

#linkid rt_mutex_unlock
fn rt_mutex_unlock(ptr<mutex_t> m)

fn mutex_t.lock() {
    rt_mutex_lock(self)
}

fn mutex_t.try_lock():bool {
    return tr_mutex_try_lock(self)
}

fn mutex.unlock() {
    rt_mutex_unlock(self)
}